/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    // stay pressed for 2 seconds
    release-after-ms = <2000>;
};

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        func_layer {
            if-layers = <1 2>;
            then-layers = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RALT>;
        };

        combo_settings_left {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo 5>;
        };

        combo_settings_right {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo 5>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

        default_layer {
            bindings = <
        &kp Q &kp W &kp F &kp P &kp B            &kp J   &kp L  &kp U     &kp Y   &kp APOS
        &kp A &kp R &kp S &kp T &kp G            &kp M   &kp N  &kp E     &kp I   &kp O
        &kp Z &kp X &kp C &kp D &kp V            &kp K   &kp H  &kp COMMA &kp DOT &kp FSLH
                          &mo 1 &kp LSFT         &kp SPC &mo 2
            >;
        };

        ext_layer {
            bindings = <
        &kp ESC    &none       &none      &none     &kp INSERT       &kp PG_UP &kp HOME  &kp UP   &kp END    &none 
        &sk LALT   &sk LGUI    &sk LSHFT  &sk LCTRL &sk RALT         &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT  &kp DEL
        &kp LC(Z)  &kp LC(X)   &kp LC(C)  &kp LGUI  &kp LC(V)        &kp ENTER &kp BSPC  &kp TAB  &kp K_APP  &kp PRINTSCREEN
                                          &mo 1     &trans           &kp ENTER &mo 2
            >;
        };

        sym_layer {
            bindings = <
        &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT          &kp KP_EQUAL    &kp GRAVE &kp COLON &kp SEMI  &kp KP_PLUS
        &sk LALT  &sk LGUI &sk LSHFT &sk LCTRL &kp CARET          &kp KP_MULTIPLY &kp LPAR  &kp LBRC  &kp LBKT  &kp MINUS
        &none     &none    &kp BSLH  &kp PIPE  &kp AMPS           &kp TILDE       &kp RPAR  &kp RBRC  &kp RBKT  &kp UNDER
                                     &mo 1     &mo 4             &kp SPC          &mo 2
            >;
        };

        func_layer {
            bindings = <
        &none    &none    &none    &none       &none          &kp F12   &kp F7  &kp F8  &kp F9  &none
        &sk LALT &sk LGUI &sk LSFT &sk LCTL    &none          &kp F11   &kp F4  &kp F5  &kp F6  &none
        &none    &none    &kp LC(LS(C))  &none &kp LC(LS(V))  &kp F10   &kp F1  &kp F2  &kp F3  &none
                                         &mo 1  &trans        &kp ENTER &mo 2
           >;
        };

        num_layer {
            bindings = <
        &none    &none    &none    &none    &none            &kp KP_EQUAL    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_PLUS
        &sk LALT &sk LGUI &sk LSFT &sk LCTL &sk RALT         &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MINUS
        &none    &kp K_APP   &kp TAB  &kp BSPC &kp ENTER    &kp KP_N0        &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DIVIDE
                                       &none    &trans        &none &none
            >;
        };


        settings_layer {
            bindings = <
        &bootloader  &none  &none  &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 3  &bt BT_CLR   &none  &none  &bootloader
        &none        &none  &none  &none       &bt BT_SEL 1     &bt BT_SEL 4  &none        &none  &none  &none
        &sys_reset   &none  &none  &bt BT_PRV &bt BT_SEL 2     &bt BT_SEL 5  &bt BT_NXT  &none  &none  &sys_reset
                                   &none       &none            &none        &none
            >;
        };
    };
};
