/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define EXT 1
#define SYM 2
#define FUNC 3
#define NUM 4
#define BLE 5

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    // stay pressed for 2 seconds
    release-after-ms = <2000>;
};

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        func_layer {
            if-layers = <EXT SYM>;
            then-layer = <FUNC>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ESC>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&sk RALT>;
        };

        combo_num_layer_left {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo NUM>;
        };

        combo_num_layer_right {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo NUM>;
        };

        combo_settings_left {
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;
            bindings = <&mo BLE>;
        };

        combo_settings_right {
            timeout-ms = <50>;
            key-positions = <16 17 18 19>;
            bindings = <&mo BLE>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

        default_layer {
            bindings = <
        &kp Q &kp D &kp R &kp W &kp B          &kp J &kp F &kp U     &kp P   &kp APOS
        &kp A &kp S &kp H &kp T &kp G          &kp Y &kp N &kp E     &kp O   &kp I
        &kp Z &kp X &kp M &kp C &kp V          &kp K &kp L &kp COMMA &kp DOT &kp FSLH
                        &mo EXT &kp LSFT       &lt NUM SPC &mo SYM
            >;
        };

        ext_layer {
            bindings = <
        &kp ESC    &none       &none      &none     &kp INSERT       &kp PG_UP &kp HOME  &kp UP   &kp END    &none 
        &sk LALT   &sk LGUI    &sk LSHFT  &sk LCTRL &sk RALT         &kp PG_DN &kp LEFT  &kp DOWN &kp RIGHT  &kp DEL
        &kp LC(Z)  &kp LC(X)   &kp LGUI   &kp LC(C) &kp LC(V)        &kp ESC   &kp BSPC  &kp TAB  &kp K_APP  &kp PRINTSCREEN
                                          &mo EXT     &trans           &kp ENTER &mo SYM
            >;
        };

        sym_layer {
            bindings = <
        &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT          &kp KP_EQUAL    &kp GRAVE &kp COLON &kp SEMI  &kp KP_PLUS
        &sk LALT  &sk LGUI &sk LSHFT &sk LCTRL &kp CARET          &kp KP_MULTIPLY &kp LPAR  &kp LBRC  &kp LBKT  &kp MINUS
        &none     &none    &kp BSLH  &kp PIPE  &kp AMPS           &kp TILDE       &kp RPAR  &kp RBRC  &kp RBKT  &kp UNDER
                                     &mo EXT   &trans             &kp SPC          &mo SYM
            >;
        };

        func_layer {
            bindings = <
        &none    &none    &none    &none         &none          &kp F12   &kp F7  &kp F8  &kp F9  &none
        &sk LALT &sk LGUI &sk LSFT &sk LCTL      &none          &kp F11   &kp F4  &kp F5  &kp F6  &none
        &none    &none    &none    &kp LC(LS(C)) &kp LC(LS(V))  &kp F10   &kp F1  &kp F2  &kp F3  &none
                                         &mo EXT &trans        &kp ENTER &mo SYM
           >;
        };

        num_layer {
            bindings = <
        &none    &none       &none    &none    &kp COLON        &kp KP_EQUAL    &kp N7 &kp N8 &kp N9 &kp KP_PLUS
        &sk LALT &sk LGUI    &sk LSFT &sk LCTL &sk RALT         &kp KP_MULTIPLY &kp N4 &kp N5 &kp N6 &kp KP_MINUS
        &none    &kp K_APP   &kp TAB  &kp BSPC &kp ENTER        &kp N0          &kp N1 &kp N2 &kp N3 &kp KP_DIVIDE
                                       &none    &trans          &none &none
            >;
        };


        settings_layer {
            bindings = <
        &bootloader  &none         &none  &bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 3  &bt BT_CLR   &none  &none       &bootloader
        &none        &none         &none  &none       &bt BT_SEL 1     &bt BT_SEL 4  &none        &none  &none       &none
        &sys_reset   &out OUT_TOG  &none  &bt BT_PRV  &bt BT_SEL 2     &bt BT_SEL 5  &bt BT_NXT   &none  &out OUT_TOG  &sys_reset
                                   &none       &none            &none        &none
            >;
        };
    };
};
